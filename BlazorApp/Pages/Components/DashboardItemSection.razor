@implements IDashboardSection
@implements IDisposable
@inject IJSRuntime JSRuntime

<MudPaper Class="pa-0" Elevation="3" Style="height: calc(100vh - 190px); border-radius: 12px; overflow: hidden;">
    <div style="height: 100%; display: flex; flex-direction: column;">
        <!-- 섹션 헤더 -->
        <div class="section-header">
            <MudStack Row AlignItems="AlignItems.Center" Justify="Justify.SpaceBetween" Class="pa-4">
                <MudStack Row AlignItems="AlignItems.Center" Spacing="2">
                    <MudAvatar Color="Color.Success" Size="Size.Small">
                        <MudIcon Icon="@Icons.Material.Filled.Category" />
                    </MudAvatar>
                    <MudText Typo="Typo.h6" Class="font-weight-bold text-success">
                        품목별 매출
                    </MudText>
                    @if (IsLoading)
                    {
                        <MudProgressCircular Size="Size.Small" Indeterminate="true" />
                    }
                </MudStack>
                <MudChip T="string" Color="Color.Info" Size="Size.Small" Variant="Variant.Filled">
                    비율 분석
                </MudChip>
            </MudStack>
            <MudDivider />
        </div>
        
        <!-- 최적화된 컨텐츠 영역 -->
        <div style="flex: 1; position: relative;">
            @if (IsLoading && _itemGroupSalesGrid == null)
            {
                <div class="d-flex justify-center align-center" style="height: 100%;">
                    <MudProgressCircular Size="Size.Large" Indeterminate="true" />
                </div>
            }
            else
            {
                <div style="height: 100%; overflow-y: auto; padding: 8px;" @ref="_scrollContainer">
                    <ItemGroupSalesGrid @ref="_itemGroupSalesGrid" />
                </div>
            }
        </div>
    </div>
</MudPaper>

@code {
    private ItemGroupSalesGrid? _itemGroupSalesGrid;
    private ElementReference _scrollContainer;
    private readonly CancellationTokenSource _cancellationTokenSource = new();
    private bool _isInitialized = false;
    
    public bool IsLoading { get; private set; } = false;

    public async Task RefreshAsync(CancellationToken cancellationToken = default)
    {
        if (IsLoading) return;

        IsLoading = true;
        StateHasChanged();

        try
        {
            using var combinedCts = CancellationTokenSource.CreateLinkedTokenSource(
                cancellationToken, _cancellationTokenSource.Token);

            if (_itemGroupSalesGrid != null)
            {
                await _itemGroupSalesGrid.RefreshAsync();
            }
        }
        catch (OperationCanceledException)
        {
            // 취소된 경우 무시
        }
        catch (Exception ex)
        {
            // 로깅 처리
            Console.WriteLine($"ItemGroupSalesGrid refresh error: {ex.Message}");
        }
        finally
        {
            IsLoading = false;
            StateHasChanged();
        }
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender && !_isInitialized)
        {
            _isInitialized = true;
            // 스크롤 최적화 적용
            await JSRuntime.InvokeVoidAsync("blazorHelpers.optimizeScroll", _scrollContainer);
        }
    }

    public void Dispose()
    {
        _cancellationTokenSource?.Cancel();
        _cancellationTokenSource?.Dispose();
    }
}

<style>
    .section-header {
        background: linear-gradient(45deg, #f0fdf4 0%, #dcfce7 100%);
        border-bottom: 1px solid #bbf7d0;
    }

    /* 스크롤바 스타일링 */
    div[style*="overflow-y: auto"]::-webkit-scrollbar {
        width: 6px;
    }

    div[style*="overflow-y: auto"]::-webkit-scrollbar-track {
        background: #f1f1f1;
        border-radius: 10px;
    }

    div[style*="overflow-y: auto"]::-webkit-scrollbar-thumb {
        background: #10b981;
        border-radius: 10px;
        opacity: 0.7;
    }

    div[style*="overflow-y: auto"]::-webkit-scrollbar-thumb:hover {
        background: #059669;
        opacity: 1;
    }
</style>
